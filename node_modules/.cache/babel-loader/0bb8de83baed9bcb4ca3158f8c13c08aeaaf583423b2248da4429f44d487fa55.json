{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zayai\\\\OneDrive\\\\Desktop\\\\safeguardtest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [accessToken, setAccessToken] = useState('');\n  const [portalUrl, setPortalUrl] = useState('');\n  const [showWebView, setShowWebView] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const login = async () => {\n    try {\n      // Step 1: Log in via API\n      const response = await fetch('https://safeguard-me-coding-exercise.azurewebsites.net/api/Login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      setAccessToken(data.accessToken);\n\n      // Step 2: Get Portal URL\n      const portalResponse = await fetch('https://safeguard-me-coding-exercise.azurewebsites.net/api/PortalUrl', {\n        headers: {\n          Authorization: `Bearer ${data.accessToken}`\n        }\n      });\n      const portalData = await portalResponse.text();\n      setPortalUrl(portalData);\n      setShowWebView(true);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleWebViewNavigationStateChange = event => {\n    // Step 4: Detect successful upload\n    if (event.url === 'https://safeguard-me-coding-exercise.azurewebsites.net/api/PortalSuccess') {\n      setSuccess(true);\n      setShowWebView(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CV Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !accessToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null, showWebView && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: portalUrl,\n      style: {\n        width: '100%',\n        height: '400px',\n        border: 'none'\n      },\n      onLoad: () => console.log('WebView loaded'),\n      onError: e => console.error('WebView error:', e),\n      onNavigationStateChange: handleWebViewNavigationStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Document uploaded successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4hgW0hE9Zmk0Lxt5czwvvS/i0rw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","email","setEmail","password","setPassword","accessToken","setAccessToken","portalUrl","setPortalUrl","showWebView","setShowWebView","success","setSuccess","login","response","fetch","method","headers","body","JSON","stringify","data","json","portalResponse","Authorization","portalData","text","error","console","handleWebViewNavigationStateChange","event","url","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","style","width","height","border","onLoad","log","onError","onNavigationStateChange","_c","$RefreshReg$"],"sources":["C:/Users/zayai/OneDrive/Desktop/safeguardtest/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [accessToken, setAccessToken] = useState('');\n  const [portalUrl, setPortalUrl] = useState('');\n  const [showWebView, setShowWebView] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const login = async () => {\n    try {\n      // Step 1: Log in via API\n      const response = await fetch('https://safeguard-me-coding-exercise.azurewebsites.net/api/Login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n      setAccessToken(data.accessToken);\n\n      // Step 2: Get Portal URL\n      const portalResponse = await fetch('https://safeguard-me-coding-exercise.azurewebsites.net/api/PortalUrl', {\n        headers: {\n          Authorization: `Bearer ${data.accessToken}`,\n        },\n      });\n      const portalData = await portalResponse.text();\n      setPortalUrl(portalData);\n      setShowWebView(true);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleWebViewNavigationStateChange = (event) => {\n    // Step 4: Detect successful upload\n    if (event.url === 'https://safeguard-me-coding-exercise.azurewebsites.net/api/PortalSuccess') {\n      setSuccess(true);\n      setShowWebView(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>CV Uploader</h1>\n      {!accessToken ? (\n        <div>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button onClick={login}>Login</button>\n        </div>\n      ) : null}\n      {showWebView && (\n        <iframe\n          src={portalUrl}\n          style={{ width: '100%', height: '400px', border: 'none' }}\n          onLoad={() => console.log('WebView loaded')}\n          onError={(e) => console.error('WebView error:', e)}\n          onNavigationStateChange={handleWebViewNavigationStateChange}\n        />\n      )}\n      {success && <p>Document uploaded successfully!</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}